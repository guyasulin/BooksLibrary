{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-button/add-button.component.css","webpack:///./src/app/add-button/add-button.component.html","webpack:///./src/app/add-button/add-button.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/books-container/books-container.component.css","webpack:///./src/app/books-container/books-container.component.html","webpack:///./src/app/books-container/books-container.component.ts","webpack:///./src/app/books-itam/books-itam.component.css","webpack:///./src/app/books-itam/books-itam.component.html","webpack:///./src/app/books-itam/books-itam.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/mat-component/mat-component.module.ts","webpack:///./src/app/modals/add-book-modal/add-book-modal.component.css","webpack:///./src/app/modals/add-book-modal/add-book-modal.component.html","webpack:///./src/app/modals/add-book-modal/add-book-modal.component.ts","webpack:///./src/app/modals/delete-modal/delete-modal.component.css","webpack:///./src/app/modals/delete-modal/delete-modal.component.html","webpack:///./src/app/modals/delete-modal/delete-modal.component.ts","webpack:///./src/app/modals/edit-modal/edit-modal.component.css","webpack:///./src/app/modals/edit-modal/edit-modal.component.html","webpack:///./src/app/modals/edit-modal/edit-modal.component.ts","webpack:///./src/app/services/config.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<button class=\\\"btn btn-dark mt-2 ml-2\\\" (click)=\\\"openDialog()\\\" >\\n  +\\n</button>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { AddBookModalComponent } from '../modals/add-book-modal/add-book-modal.component';\nimport { DataService } from '../services/data.service';\nimport { ConfigService } from '../services/config.service';\n\n\n@Component({\n  selector: 'app-add-button',\n  templateUrl: './add-button.component.html',\n  styleUrls: ['./add-button.component.css']\n})\nexport class AddButtonComponent implements OnInit {\n  @Output() addBook = new EventEmitter<any>();\n\n  constructor(public dialog: MatDialog,private dataService:DataService,\n              private configService:ConfigService) { }\n\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(AddBookModalComponent, {\n      width: '500px',\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if(result) {\n        this.addBook.emit(result)\n      }\n    });\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".books-container {\\r\\n    display: flex;\\r\\n    justify-content: flex-start;\\r\\n    flex-flow: wrap;\\r\\n}\"","module.exports = \"<app-header></app-header>\\n<app-books-container class=\\\"books-container\\\"></app-books-container>\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(){}\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { BooksItamComponent } from './books-itam/books-itam.component';\nimport { DataService } from './services/data.service';\nimport { ConfigService } from './services/config.service';\nimport { AddButtonComponent } from './add-button/add-button.component';\nimport { AddBookModalComponent } from './modals/add-book-modal/add-book-modal.component';\nimport { DeleteModalComponent } from './modals/delete-modal/delete-modal.component';\nimport { EditModalComponent } from './modals/edit-modal/edit-modal.component';\nimport { BooksContainerComponent } from './books-container/books-container.component';\nimport { MatComponentModule } from './mat-component/mat-component.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    BooksItamComponent,\n    AddButtonComponent,\n    AddBookModalComponent,\n    DeleteModalComponent,\n    EditModalComponent,\n    BooksContainerComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    HttpModule,\n    BrowserModule,\n    NoopAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    MatComponentModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents:[EditModalComponent,DeleteModalComponent,AddBookModalComponent],\n  providers: [ConfigService,DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"app-books-itam{\\r\\n \\r\\n    margin-left:4%;\\r\\n}\"","module.exports = \"<app-add-button (addBook)=\\\"addBookItem($event)\\\"></app-add-button>\\r\\n\\r\\n<app-books-itam *ngFor=\\\"let book of books\\\"\\r\\n [book]=\\\"book\\\" \\r\\n (deleteBook)=\\\"removeBook($event)\\\"\\r\\n [AddBookData]=\\\"AddBookData\\\">\\r\\n</app-books-itam>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../services/data.service';\n\n\n@Component({\n  selector: 'app-books-container',\n  templateUrl: './books-container.component.html',\n  styleUrls: ['./books-container.component.css']\n})\nexport class BooksContainerComponent implements OnInit {\n  private books;\n  constructor(\n    private dataService: DataService) { }\n\n  ngOnInit() {\n    this.dataService.fetchData()\n      .subscribe(data =>  this.books = data);\n  }\n\n\n  removeBook(data: any) {\n    console.log('Deleting book: ', data)\n    const bookIndex = this.books.findIndex(book => book.title === data.title);\n    this.books.splice(bookIndex, 1);\n  }\n\n\n  addBookItem(AddBookData:any){\n    console.log('add book =>>>>' , AddBookData)\n    AddBookData.id = this.books.length + 1;\n    this.books.push(AddBookData)\n  }\n}\n","module.exports = \".row{\\r\\n    margin-bottom: 34px;\\r\\n}\\r\\n.card-img-top{\\r\\n    width:290px;\\r\\n    height:430px;\\r\\n}\\r\\np{margin-left: 15px;}\\r\\nh5{margin-left: 15px;}\\r\\n[type=button]{width: 77px;margin-left: 25px;}\\r\\n.edit{\\r\\n    background-color: white;\\r\\n    color: #289a28d6;\\r\\n    border: 1px solid #289a28d6;\\r\\n}\\r\\n.delete{\\r\\n    color: #dc3545;\\r\\n    border: 1px solid #dc3545;\\r\\n    margin-left: 62px;\\r\\n}\\r\\n.col {\\r\\n    margin-left: 2%;\\r\\n    display: inline;\\r\\n}\\r\\n.mat-grid-list{\\r\\n    margin-bottom: 34px;\\r\\n    padding: 30px;\\r\\n}\\r\\n.example-card{\\r\\n    width:290px;\\r\\n    height:608px;\\r\\n}\\r\\n.mat-card-image {\\r\\n    height: 418px;\\r\\n}\\r\\nmat-card-actions{\\r\\n    display: flex;\\r\\n    justify-content: space-around;\\r\\n}\\r\\n\"","module.exports = \"\\n<!-- \\n  <div class=\\\"col-sm\\\">\\n    <div class=\\\"card mt-4\\\" style=\\\"width: 18rem;\\\">\\n      <img class=\\\"card-img-top\\\" [src]=\\\"book.image\\\" alt=\\\"Card image cap\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{ book.title }}</h5>\\n        <p class=\\\"card-text\\\">{{ book.author }}</p>\\n        <p class=\\\"card-text\\\">{{ book.date }}</p>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n       <button  mat-raised-button class=\\\"edit\\\" type=\\\"button\\\" (click)=\\\"openDialogEdit()\\\" >\\n          <img src=\\\"../../assets/images/writing.png\\\" style=\\\"width:15px;height:15px;margin-left: 5px\\\">\\n          Edit\\n        </button>\\n      \\n        <div class=\\\"col\\\">\\n          <button mat-raised-button class=\\\"delete\\\" type=\\\"button\\\" (click)=\\\"openDialogRemove(i)\\\">Delete\\n            <img src=\\\"../../assets/images/delete.png\\\" style=\\\"width:15px;height: 15px;\\\">\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<li *ngIf=\\\"addBookItem\\\">\\n      You chose: <i>{{AddBookData}}</i>\\n</li> -->\\n\\n\\n\\n <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"2:1\\\">\\n  <mat-card class=\\\"example-card\\\" style=\\\"width: 20rem;\\\">\\n      <img mat-card-image [src]=\\\"book.image\\\" alt=\\\"Card image cap\\\">\\n      <mat-card-header>\\n          <mat-card-title>{{ book.title }}</mat-card-title>\\n          <mat-card-subtitle>{{ book.author }}</mat-card-subtitle>\\n          <mat-card-subtitle>{{ book.date }}</mat-card-subtitle>\\n        </mat-card-header>\\n        <mat-card-actions>\\n            <button  mat-raised-button class=\\\"edit\\\" type=\\\"button\\\" (click)=\\\"openDialogEdit()\\\" >\\n                <img src=\\\"../../assets/images/writing.png\\\" style=\\\"width:15px;height:15px;margin-left: 5px\\\">\\n                Edit</button>\\n            <button  mat-raised-button class=\\\"delete\\\" type=\\\"button\\\" (click)=\\\"openDialogRemove(i)\\\">\\n                    <img src=\\\"../../assets/images/delete.png\\\" style=\\\"width:15px;height:15px;\\\">\\n                Edit</button>\\n          </mat-card-actions>\\n    </mat-card>\\n  </mat-grid-list> \\n\"","import { Component,OnInit, Input, EventEmitter, Output, } from '@angular/core';\nimport { ConfigService } from '../services/config.service';\nimport { EditModalComponent } from '../modals/edit-modal/edit-modal.component';\nimport { DeleteModalComponent } from '../modals/delete-modal/delete-modal.component';\nimport { MatDialog } from '@angular/material';\nimport { AddBookModalComponent } from '../modals/add-book-modal/add-book-modal.component';\n\n\n\n\n@Component({\n  selector: 'app-books-itam',\n  templateUrl: './books-itam.component.html',\n  styleUrls: ['./books-itam.component.css']\n})\nexport class BooksItamComponent implements OnInit {\n  @Input() book;\n  @Input() AddBookData;\n  @Output() deleteBook = new EventEmitter<any>();\n\n  title: string;\n  author: string;\n  date:number;\n\n  \n  \n  constructor(public configService:ConfigService,\n    public dialog: MatDialog,){ }\n\nngOnInit(){\n  }\n\n  openDialogEdit(): void {\n    const dialogRef = this.dialog.open(EditModalComponent, {\n      width: '489px',\n      data: this.book,\n      autoFocus: false\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed', result);\n    });\n  }\n\n  openDialogRemove(): void {\n    const dialogRef = this.dialog.open(DeleteModalComponent,{\n      data: this.book\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.deleteBook.emit(result);\n    })\n  }\n\n\n}\n","module.exports = \".card{\\r\\n    font-size: 50px;\\r\\n    /* height: 50px; */\\r\\n}\"","module.exports = \"<div class=\\\"card text-white bg-dark b-6 mb-3\\\" style=\\\"max-width: 100%;padding:20px;\\\">\\n  <div class=\\\"card-header\\\">Book-Library</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatChipsModule} from '@angular/material/chips';\nimport { MatNativeDateModule } from '@angular/material';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { MatFileUploadModule } from 'angular-material-fileupload';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\n\n@NgModule({\n  exports: [\n    MatDialogModule,\n    MatCardModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatExpansionModule,\n    MatDatepickerModule,\n    MatChipsModule,\n    MatNativeDateModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatFileUploadModule,\n    MaterialFileInputModule,\n    \n  ]\n})\nexport class MatComponentModule { }\n","module.exports = \".confirm{background: #289a28d6;;}\\r\\n.delete{background: #dc3545;}\\r\\n.grid-list{\\r\\n  margin-top: 41px;\\r\\n}\\r\\n.example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n.example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n.mat-date{\\r\\n    position: relative;\\r\\n    top: 92px;\\r\\n    left: -386px;\\r\\n}\\r\\n.example-width{\\r\\n  margin-left: 30px;\\r\\n}\"","module.exports = \"<mat-toolbar>\\n      <h1 mat-dialog-title>Add a book</h1>\\n</mat-toolbar>\\n<div mat-dialog-content>\\n      <form [formGroup]=\\\"form\\\">\\n            <mat-grid-list class=\\\"grid-list\\\" cols=\\\"3\\\" rowHeight=\\\"150px\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput [formControl]=\\\"bookTitle\\\" placeholder=\\\"Title\\\">\\n                        <mat-error *ngIf=\\\"bookTitle.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                  </mat-form-field>\\n                  <mat-form-field class=\\\"example-width\\\">\\n                        <input matInput [formControl]=\\\"bookAuthor\\\" placeholder=\\\"Aothur\\\">\\n                        <mat-error *ngIf=\\\"bookAuthor.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                  </mat-form-field>\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput value=[date] [matDatepicker]=\\\"picker\\\" placeholder=\\\"Pick date\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                  <mat-form-field class=\\\"example-width\\\">\\n                        <input matInput  type=\\\"url\\\"  [src]=\\\"bookImageUrl.imageUrl\\\" [formControl]=\\\"bookImageUrl\\\" placeholder=\\\"image\\\">\\n                        <mat-error *ngIf=\\\"bookImageUrl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                  </mat-form-field>\\n            </mat-grid-list>\\n      </form>\\n</div>\\n\\n\\n<div mat-dialog-actions>\\n      <button class=\\\"confirm\\\" type=\\\"button\\\" [disabled]=\\\"!form.valid\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"onSend()\\\">Submit\\n            <img src=\\\"../../../assets/images/down-arrow.png\\\" style=\\\"width:15px;height: 15px;\\\">\\n      </button>\\n\\n      <button class=\\\"delete\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"onNoClick()\\\">Cancel\\n            <img src=\\\"../../../assets/images/delete (1).png\\\" style=\\\"width:15px;height: 15px;\\\">\\n      </button>\\n</div>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { ConfigService } from '../../services/config.service';\nimport {DataService} from '../../services/data.service';\nimport { Validators, AbstractControl, FormGroup, FormBuilder } from '@angular/forms';\n// import { url } from 'inspector';\n\n@Component({\n  selector: 'app-add-book-modal',\n  templateUrl: './add-book-modal.component.html',\n  styleUrls: ['./add-book-modal.component.css']\n})\nexport class AddBookModalComponent implements OnInit {\n\n   form :FormGroup  ;\n\n  constructor(public dialogRef: MatDialogRef<AddBookModalComponent>,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private configService: ConfigService,\n              private fb: FormBuilder ) \n              { \n                  // console.log(this.dataService.bookList)    \n                  this.form = this.fb.group({\n                    title: ['',  Validators.required],\n                    author: ['',  Validators.required],\n                    imageUrl: [, Validators.required],\n                    // date: [new Date([this.AddBookData.date), Validators.required],\n                  })    \n              }\n            \n  ngOnInit() { \n   }\n\n  onSend(){\n    this.dialogRef.close(this.form.value)\n    console.log(this.form.value);\n  }\n\nonNoClick(){\n  this.dialogRef.close();\n}\n\nget bookTitle(): AbstractControl {\n  return this.form.controls.title;\n}\n\nget bookAuthor() {\n  return this.form.controls.author;\n}\nget bookImageUrl() {\n  return this.form.controls.imageUrl;\n}\ngetErrorMessage() {\n  return 'This field is required';\n}\n\n}\n","module.exports = \"\"","module.exports = \"<h1 md-dialog-title>\\n  Are you sure ?</h1>\\n<div md-dialog-content>{{confirmMessage}}</div>\\n<div md-dialog-actions>\\n  <button  type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onRemove()\\\">Confirme</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onNoClick()\\\">cancel</button>\\n</div>\"","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { ConfigService } from '../../services/config.service';\nimport { MatDialogRef, MAT_DIALOG_DATA,MatDialog } from '@angular/material';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-delete-modal',\n  templateUrl: './delete-modal.component.html',\n  styleUrls: ['./delete-modal.component.css']\n})\nexport class DeleteModalComponent implements OnInit {\n  title: string;\n  author: string;\n  date:number;\n\n  constructor(private configService:ConfigService,\n               public dialogRef: MatDialogRef<DeleteModalComponent>,\n               @Inject(MAT_DIALOG_DATA) public data: any,\n                private dataService:DataService) { }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n onNoClick(): void {\n  this.dialogRef.close();\n}\n  onRemove(){\n    this.dialogRef.close(this.data);\n }\n}\n","module.exports = \".confirm{\\r\\n    background: #289a28d6;\\r\\n    text-align: left;\\r\\n}\\r\\n.delete{background: #dc3545;}\\r\\n.mat-date{\\r\\n    position: relative;\\r\\n    top: 92px;\\r\\n    left: -386px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<h1 mat-dialog-title>Edit a book</h1>\\n<div mat-dialog-content>\\n      <form [formGroup]=\\\"form\\\">\\n            <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"150px\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput [formControl]=\\\"bookTitle\\\" placeholder=\\\"Title\\\">\\n                        <mat-error *ngIf=\\\"bookTitle.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                  </mat-form-field>\\n\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput [formControl]=\\\"bookAuthor\\\" placeholder=\\\"Author\\\">\\n                        <mat-error *ngIf=\\\"bookTitle.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                  </mat-form-field>\\n\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput [matDatepicker]=\\\"picker\\\" value=[date] placeholder=\\\"Pick date\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>\\n                  </mat-form-field>\\n                  <br>\\n            </mat-grid-list>\\n      </form>\\n</div>\\n<div mat-dialog-actions>\\n      <button class=\\\"confirm\\\" [disabled]=\\\"!form.valid\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"onSubmit()\\\">Submit\\n            <img mat-card-image src=\\\"../../../assets/images/down-arrow.png\\\" style=\\\"width:15px;height:15px;margin-left:4px;margin-top:11px;\\\">\\n      </button>\\n\\n      <button class=\\\"delete\\\" (click)=\\\"onNoClick()\\\" color=\\\"primary\\\" mat-raised-button>\\n            <img src=\\\"../../../assets/images/delete (1).png\\\" style=\\\"width:15px;height: 15px;\\\">\\n      </button>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<!-- <div class=\\\"colcol-md-5\\\">\\n                        <label>Title</label>\\n                        <input type=\\\"text\\\" [value]=\\\"data.title\\\" class=\\\"form-control\\\">\\n                  </div>\\n                  <div class=\\\"colcol-md-5\\\">\\n                        <label>Author</label>\\n                        <input type=\\\"text\\\" [value]=\\\"data.author\\\" class=\\\"form-control\\\">\\n                  </div><br> -->\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { ConfigService } from '../../services/config.service';\nimport { DataService } from '../../services/data.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { FormControl, Validators, FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-edit-modal',\n  templateUrl: './edit-modal.component.html',\n  styleUrls: ['./edit-modal.component.css']\n})\n\nexport class EditModalComponent implements OnInit {\n\n  title: string;\n  author: string;\n  date: Date;\n  form: FormGroup;\n \n\n  \n  constructor(private configService:ConfigService,\n    public dialogRef: MatDialogRef<EditModalComponent>,\n              private fb: FormBuilder,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private dataService:DataService) {\n\n                this.form = this.fb.group({\n                  title: [this.data.title, Validators.required],\n                  date: [new Date(this.data.date), Validators.required],\n                  author: [this.data.author, Validators.required]\n                })\n               }\n\n\n  ngOnInit() {\n    console.log(this.form);\n\n  }\n  onSubmit(){\n    this.dialogRef.close(this.form.value)\n\n   }\n\n   onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  get bookTitle(): AbstractControl {\n    return this.form.controls.title;\n  }\n\n  get bookAuthor() {\n    return this.form.controls.author;\n  }\n   getErrorMessage() {\n    return 'This field is required';\n   }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Config } from '../config';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n\n  // private _url:string = \"../../assets/data/data.json\";\n  // public bookList = [];\n  // constructor(private httpClient:HttpClient) {\n  //   console.log(\"gggg\");\n  //   this.fetchData()\n  //   .pipe(take(1))\n  //     .subscribe(data => {\n        \n  //       this.bookList = data;\n  //       console.log(\"000-> \",this.bookList);\n  //    });\n  // }\n\n// fetchData():Observable<Config[]> {\n//   return this.httpClient.get<Config[]>(this._url);\n// }\n\n// fetchchData():Observable<Config[]> {\n//   return this.httpClient.get<Config[]>(this._url);\n// }\naddData(bookData){\n  // 1. push new book into bookslist Array\n  \n}\n// getBookList(){\n//   this.fetchData()\n//   .pipe(take(1))\n//   .subscribe(data => {\n//     console.log(data);\n//     this.bookList = data\n//   });\n// }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Config } from '../config';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private _url:string = \"../../assets/data/data.json\";\n  public bookList = [];\n  book: any;\n\n  \n\n  constructor(public httpClient:HttpClient) { \n    this.fetchData()\n    .pipe(take(1))\n      .subscribe(data => {\n        this.bookList = data;\n        console.log(\"000-> \",this.bookList);\n     });\n  }\n\nfetchData():Observable<Config[]> {\n  return this.httpClient.get<Config[]>(this._url);\n  \n}\n\naddData(bookData){\n  // 1. push new book into bookslist Array\n  return this.httpClient.post('../../assets/data/data.json',bookData);\n  \n}\ngetBookList(){\n  this.fetchData()\n  .pipe(take(1))\n  .subscribe(data => {\n    console.log(data);\n    this.bookList = data\n  });\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}